{"version":3,"sources":["scripts/main.js"],"names":["spider","document","querySelector","wall","addEventListener","e","x","spiderLeft","spiderTop","offsetX","y","offsetY","maxX","clientWidth","width","maxY","clientHeight","height","target","className","closest","style","left","top","transition"],"mappings":";AAAA,aAEA,IAAMA,EAASC,SAASC,cAAc,WAChCC,EAAOF,SAASC,cAAc,SAEpCD,SAASG,iBAAiB,QAAS,SAAAC,GAE3BC,IAQFC,EACAC,EATEF,EAAID,EAAEI,QACNC,EAAIL,EAAEM,QAINC,EAAOT,EAAKU,YAAcb,EAAOc,MAAQ,EACzCC,EAAOZ,EAAKa,aAAehB,EAAOiB,OAAS,EAKtB,WAAvBZ,EAAEa,OAAOC,WAOTd,EAAEa,OAAOE,QAAQ,WAKjBb,EADED,EAAIM,EACOA,EAAOZ,EAAOc,MAAQ,EAC1BR,EAAIN,EAAOc,MAAQ,EAAI,EACnB,EAEAR,EAAIN,EAAOc,MAAQ,EAIhCN,EADEE,EAAIK,EACMA,EAAOf,EAAOiB,OAAS,EAC1BP,EAAIV,EAAOiB,OAAS,EAAI,EACrB,EAEAP,EAAIV,EAAOc,MAAQ,EAGjCd,EAAOqB,MAAMC,KAAUf,GAAAA,OAAAA,EAAvB,MACAP,EAAOqB,MAAME,IAASf,GAAAA,OAAAA,EAAtB,MACAR,EAAOqB,MAAMG,WAAa","file":"main.b4a1d08a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst spider = document.querySelector('.spider');\nconst wall = document.querySelector('.wall');\n\ndocument.addEventListener('click', e => {\n  // write code here\n  const x = e.offsetX;\n  const y = e.offsetY;\n  // '.offset[X|Y]' provides px from boundaries of a parent element =>\n  // => (will lessen calculations compared to '.client[X|Y]')\n\n  const maxX = wall.clientWidth - spider.width / 2;\n  const maxY = wall.clientHeight - spider.height / 2;\n\n  let spiderLeft;\n  let spiderTop;\n\n  if (e.target.className === 'spider') {\n    // prevents further code if we click on 'spider'\n    // otherwise (x, y) will always be set to (0, 0)\n    // since offset calculates from parent element of event.target\n    return;\n  }\n\n  if (e.target.closest('.wall')) {\n  // cuts-off all clicks outside '.wall' class\n  // all adjustments `-[.width|.height] / 2` below\n  // mitigate an issue of not centered spider when clicking `max[X|Y]`\n    if (x > maxX) {\n      spiderLeft = maxX - spider.width / 2;\n    } else if (x - spider.width / 2 < 0) {\n      spiderLeft = 0;\n    } else {\n      spiderLeft = x - spider.width / 2;\n    }\n\n    if (y > maxY) {\n      spiderTop = maxY - spider.height / 2;\n    } else if (y - spider.height / 2 < 0) {\n      spiderTop = 0;\n    } else {\n      spiderTop = y - spider.width / 2;\n    }\n\n    spider.style.left = `${spiderLeft}px`;\n    spider.style.top = `${spiderTop}px`;\n    spider.style.transition = '0.3s';\n  }\n});\n"]}